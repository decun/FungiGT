services:
  # Base de datos MongoDB
  mongodb:
    image: mongo:7.0
    container_name: fungigt-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-admin123}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE:-test}
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init:/docker-entrypoint-initdb.d:ro
    networks:
      - fungigt-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Servicio de autenticación
  auth:
    build:
      context: .
      dockerfile: infrastructure/docker/auth/Dockerfile
    container_name: fungigt-auth
    ports:
      - "${AUTH_PORT:-4001}:${AUTH_PORT:-4001}"
    volumes:
      - ./src/core/auth:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - AUTH_PORT=${AUTH_PORT:-4001}
      - JWT_SECRET=${JWT_SECRET:-fungi-gt-secret-key-2024}
      - MONGODB_URI=mongodb://fungigt_user:fungigt_password_2024@mongodb:27017/fungigt?authSource=fungigt
    restart: unless-stopped
    networks:
      - fungigt-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4001/health || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: infrastructure/docker/frontend/Dockerfile
    container_name: fungigt-frontend
    ports:
      - "${FRONTEND_PORT:-4005}:${FRONTEND_PORT:-4005}"
    volumes:
      - ./src/frontend:/app
      - ./src/backend:/app/backend
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - FRONTEND_PORT=${FRONTEND_PORT:-4005}
      - MONGODB_URI=${MONGODB_URI:-mongodb://app:app123@mongodb:27017/fungigt?authSource=admin}
      - AUTH_SERVICE_URL=http://auth:${AUTH_PORT:-4001}
      - API_BASE_URL=http://localhost:${AUTH_PORT:-4001}
    restart: unless-stopped
    networks:
      - fungigt-network
    depends_on:
      auth:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${FRONTEND_PORT:-4005}", "||", "exit", "1"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Gestión de archivos
  file-manager:
    build:
      context: .
      dockerfile: infrastructure/docker/file_manager/Dockerfile
    container_name: fungigt-file-manager
    volumes:
      - ./data:/app/data
    ports:
      - "4002:4002"
    environment:
      - PORT=4002
      - NODE_ENV=${NODE_ENV:-development}
      - DATA_DIR=/app/data
    restart: unless-stopped
    networks:
      - fungigt-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:4002/health || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Visualización (custom - generado por nosotros)
  visualization:
    build:
      context: .
      dockerfile: infrastructure/docker/visualization/Dockerfile
    container_name: fungigt-visualization
    volumes:
      - ./src/modules/visualization:/app
      - ./data:/app/data
    ports:
      - "4003:4003"
    environment:
      - PORT=4003
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    networks:
      - fungigt-network
    depends_on:
      - mongodb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4003/health", "||", "exit", "1"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Control de calidad con CheckM integrado
  quality-control:
    build:
      context: .
      dockerfile: infrastructure/docker/quality_control/Dockerfile
    container_name: fungigt-quality-control
    volumes:
      - ./src/modules/quality_control:/app
      - ./data:/app/data
      - /app/node_modules
    ports:
      - "4004:4004"
    environment:
      - PORT=4004
      - NODE_ENV=${NODE_ENV:-development}
      - MONGODB_URI=${MONGODB_URI:-mongodb://admin:admin123@mongodb:27017/test?authSource=admin}
    restart: unless-stopped
    networks:
      - fungigt-network
    depends_on:
      - mongodb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4004/health", "||", "exit", "1"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Adquisición de datos (custom - generado por nosotros)
  acquisition:
    build:
      context: .
      dockerfile: src/modules/acquisition/ncbi_cli/Dockerfile
    container_name: fungigt-acquisition
    volumes:
      - ./src/modules/acquisition:/app
      - ./data:/data
      - /app/node_modules
    ports:
      - "4006:4006"
    environment:
      - PORT=4006
      - NODE_ENV=${NODE_ENV:-development}
      - MONGODB_URI=${MONGODB_URI:-mongodb://admin:admin123@mongodb:27017/test?authSource=admin}
    restart: unless-stopped
    networks:
      - fungigt-network
    depends_on:
      - mongodb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4006", "||", "exit", "1"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ===== SERVICIOS EXTERNOS DE DOCKER HUB =====
  
  # Anotación genómica automática (BRAKER3) - Docker Hub
  annotation:
    image: teambraker/braker3:latest
    container_name: fungigt-annotation
    volumes:
      - ./data:/data
      - ./data/braker_output:/opt/BRAKER/output
    working_dir: /data
    networks:
      - fungigt-network
    restart: unless-stopped
    command: tail -f /dev/null  # Mantiene el contenedor activo
    environment:
      - BRAKER_HOME=/opt/BRAKER
    profiles:
      - tools  # Solo se inicia con perfil "tools"

  # CheckM para evaluación de completitud genómica - Docker Hub
  checkm:
    image: nanozoo/checkm:latest
    container_name: fungigt-checkm
    volumes:
      - ./data:/data
      - ./data/checkm_output:/output
    working_dir: /data
    networks:
      - fungigt-network
    restart: unless-stopped
    command: tail -f /dev/null  # Mantiene el contenedor activo
    profiles:
      - tools  # Solo se inicia con perfil "tools"

  # Análisis funcional con EggNOG - Docker Hub (Biocontainers)
  functional-analysis:
    image: quay.io/biocontainers/eggnog-mapper:2.1.12--pyhdfd78af_1
    container_name: fungigt-eggnog
    volumes:
      - ./data:/data
      - ./data/eggnog_output:/output
    working_dir: /data
    networks:
      - fungigt-network
    restart: unless-stopped
    command: tail -f /dev/null  # Mantiene el contenedor activo
    profiles:
      - tools  # Solo se inicia con perfil "tools"

  # Análisis filogenético con BLAST - Docker Hub
  phylogeny:
    image: ncbi/blast:latest
    container_name: fungigt-blast
    volumes:
      - ./data:/data
      - ./data/blast_output:/output
      - ./data/blast_db:/blast/blastdb
    working_dir: /data
    networks:
      - fungigt-network
    restart: unless-stopped
    command: tail -f /dev/null  # Mantiene el contenedor activo
    environment:
      - BLASTDB=/blast/blastdb
    profiles:
      - tools  # Solo se inicia con perfil "tools"

networks:
  fungigt-network:
    driver: bridge
    name: fungigt-network

volumes:
  mongodb_data:
    name: fungigt-mongodb-data
  data:
    name: fungigt-data 